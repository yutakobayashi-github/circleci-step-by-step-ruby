version: 2.1

jobs:
  ruby-test:
    parallelism: 3
    docker:
      - image: cimg/ruby:2.7-node
        environment:
          BUNDLE_JOBS: '3'
          BUNDLE_RETRY: '3'
          PGHOST: 127.0.0.1
          PGPASSWORD: ''
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ''
          POSTGRES_USER: circleci-demo-ruby
    steps:
      - checkout
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          name: Wait for DB
      - run:
          command: bin/rails db:schema:load --trace
          name: Database setup
      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            spec/**/*_spec.rb \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results

workflows:
  build:
    jobs:
    - ruby-test
